components:
  schemas:
    ApiKey:
      properties:
        createdDate:
          format: date-time
          type: string
        creatorUserEmail:
          type: string
        cuiMachineAccountId:
          type: string
        cuiMachineAccountName:
          type: string
        description:
          type: string
        keyExpiresAt:
          type: string
        lastModifiedDate:
          format: date-time
          type: string
        lastRefreshed:
          type: string
        lastUsed:
          format: date-time
          type: string
        piamOrgId:
          type: string
        refreshExpiresAt:
          type: string
        tokenExpiresAt:
          type: string
      type: object
    CreateApiKeyRequest:
      properties:
        apiKeyName:
          type: string
        description:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    CreateApiKeyResponse:
      properties:
        accessToken:
          type: string
        cuiMachineAccountId:
          type: string
        refreshToken:
          type: string
      type: object
    Permission:
      properties:
        applicationScopeIds:
          items:
            type: string
          type: array
        product:
          type: string
        productInstanceId:
          type: string
        productKey:
          type: string
        roleDisplayName:
          type: string
        roleId:
          type: string
        roleName:
          type: string
        roleType:
          enum:
            - static
            - custom
          type: string
      type: object
    PiamTokenResponse:
      properties:
        expiresAt:
          format: date-time
          type: string
        token:
          type: string
      type: object
    RefreshTokenFormRequest:
      properties:
        apiKeyId:
          type: string
        grantType:
          enum:
            - refresh_token
          type: string
        refreshToken:
          type: string
      required:
        - grantType
        - refreshToken
        - apiKeyId
      type: object
    RefreshTokenResponse:
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: Service for managing API keys and tokens
  title: API Key Management Service
  version: 1.0.0
openapi: 3.0.3
paths:
  /access_token:
    post:
      operationId: generateCUIToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefreshTokenFormRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
          description: Access token generated
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
      summary: Generate CUI access token from refresh token
  /apiKeys:
    get:
      operationId: getApiKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiKey'
                type: array
          description: List of API keys
        '401':
          description: Unauthorized
        '500':
          description: Server error
      security:
        - bearerAuth: []
      summary: Get API Keys
    post:
      operationId: createApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiKeyResponse'
          description: API key created
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
      summary: Create API Key
  /apiKeys/client_token:
    get:
      operationId: generatePIAMToken
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PiamTokenResponse'
          description: PIAM token generated
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
      summary: Generate PIAM Token
  /apiKeys/{apiKeyId}:
    delete:
      operationId: deleteApiKey
      parameters:
        - description: ID of the API key to delete
          in: path
          name: apiKeyId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: API key deleted
        '401':
          description: Unauthorized
        '404':
          description: API key not found
      security:
        - bearerAuth: []
      summary: Delete API Key
servers:
  - url: https://api.int.security.cisco.com/v1/api/applications
